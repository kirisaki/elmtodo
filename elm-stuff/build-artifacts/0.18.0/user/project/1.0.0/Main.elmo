var _user$project$Main$update = F2(
	function (msg, model) {
		var isSpace = function (_p0) {
			return _elm_lang$core$String$isEmpty(
				_elm_lang$core$String$trim(_p0));
		};
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Add':
				return isSpace(model.newTodo) ? model : _elm_lang$core$Native_Utils.update(
					model,
					{
						todoList: {ctor: '::', _0: model.newTodo, _1: model.todoList},
						newTodo: ''
					});
			case 'Change':
				return _elm_lang$core$Native_Utils.update(
					model,
					{newTodo: _p1._0});
			default:
				var _p2 = _p1._0;
				var t = model.todoList;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						todoList: A2(
							_elm_lang$core$Basics_ops['++'],
							A2(_elm_lang$core$List$take, _p2, t),
							A2(_elm_lang$core$List$drop, _p2 + 1, t))
					});
		}
	});
var _user$project$Main$model = {
	newTodo: '',
	todoList: {ctor: '[]'}
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {newTodo: a, todoList: b};
	});
var _user$project$Main$Delete = function (a) {
	return {ctor: 'Delete', _0: a};
};
var _user$project$Main$showList = function () {
	var column = function (_p3) {
		var _p4 = _p3;
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(_p4._1),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Main$Delete(_p4._0)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Ã—'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	};
	var todos = _elm_lang$core$List$indexedMap(
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}));
	return function (_p5) {
		return A2(
			_elm_lang$core$List$map,
			column,
			todos(_p5));
	};
}();
var _user$project$Main$Add = {ctor: 'Add'};
var _user$project$Main$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('input your todo'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Change),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$value(model.newTodo),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Add),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('add todo'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						_user$project$Main$showList(model.todoList)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
